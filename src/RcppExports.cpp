// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/migou.h"
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// min_var_eigen
double min_var_eigen(NumericVector x_, NumericMatrix a_, int N, double eps);
RcppExport SEXP _migou_min_var_eigen(SEXP x_SEXP, SEXP a_SEXP, SEXP NSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x_(x_SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type a_(a_SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(min_var_eigen(x_, a_, N, eps));
    return rcpp_result_gen;
END_RCPP
}
// weighted_Kinship_w
NumericMatrix weighted_Kinship_w(XPtr<matrix4> p_A, const std::vector<double>& mu, const std::vector<double>& w, LogicalVector snps, int chunk);
RcppExport SEXP _migou_weighted_Kinship_w(SEXP p_ASEXP, SEXP muSEXP, SEXP wSEXP, SEXP snpsSEXP, SEXP chunkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtr<matrix4> >::type p_A(p_ASEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const std::vector<double>& >::type w(wSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type snps(snpsSEXP);
    Rcpp::traits::input_parameter< int >::type chunk(chunkSEXP);
    rcpp_result_gen = Rcpp::wrap(weighted_Kinship_w(p_A, mu, w, snps, chunk));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_migou_min_var_eigen", (DL_FUNC) &_migou_min_var_eigen, 4},
    {"_migou_weighted_Kinship_w", (DL_FUNC) &_migou_weighted_Kinship_w, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_migou(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
